{"ast":null,"code":"var _jsxFileName = \"D:\\\\Libr\\\\front\\\\src\\\\Page\\\\SystemInfo.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TableSheme from '../Components/Table/TableSheme';\nimport Navbar from '../Components/Navbar/Navbar';\nimport '../Components/Table/Table.css';\nimport { useParams } from 'react-router-dom';\nimport { useHttp } from '../hooks/http.hook';\nimport { useMessage } from '../hooks/message.hook';\n\nfunction SystemInfo(props) {\n  const [items, setItems] = useState([]);\n  const [info_system, setInfo_system] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const message = useMessage();\n  const {\n    request,\n    error,\n    clearError\n  } = useHttp();\n  const {\n    id\n  } = useParams();\n  const url = `http://localhost:5000/api/uploads/${id}`;\n  const url_id = `http://localhost:5000/api/systems/${id}`;\n  /*\r\n      useEffect(() => {\r\n          message(error)\r\n          clearError()\r\n      }, [error, message, clearError])\r\n  */\n  //Получение информации по системе\n\n  useEffect(async () => {\n    try {\n      const system_data = await request(url_id, 'GET');\n      setInfo_system(system_data);\n    } catch (error) {}\n  }, [isLoaded]);\n  console.log(info_system); //Получение списка всех файлов для конрктной системы\n\n  useEffect(async () => {\n    try {\n      const data = await request(url, 'GET');\n      setIsLoaded(true);\n      setItems(data);\n    } catch (error) {\n      setIsLoaded(true);\n    }\n  }, [isLoaded]); // Загрузка файла\n\n  const uploadScheme = async selectedFile => {\n    try {\n      const data = new FormData();\n      data.append('file', selectedFile, selectedFile.name);\n      const response = await request(url, data);\n      console.log(\"ошибкknbuubuа\");\n      setIsLoaded(false);\n    } catch (error) {\n      toast(error);\n    }\n  };\n\n  const dowlandScheme = (_id, name) => {\n    axios({\n      url: `http://127.0.0.1:5000/api/uploads/schema/${_id}`,\n      method: 'GET',\n      responseType: 'blob' // important\n\n    }).then(response => {\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', name);\n      document.body.appendChild(link);\n      link.click();\n    });\n    setIsLoaded(false);\n  };\n\n  const removeScheme = (_id, fileSrc) => {\n    axios.delete(`http://127.0.0.1:5000/api/uploads/schema/${_id}`, {\n      data: {\n        fileSrc\n      }\n    });\n    setIsLoaded(false);\n  };\n\n  const editScheme = async (_id, name) => {\n    await axios.put(`http://127.0.0.1:5000/api/uploads/schema/${_id}`, {\n      name\n    });\n    setIsLoaded(false);\n  };\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 16\n      }\n    }, \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error.message);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 16\n      }\n    }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\");\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, Object.assign({}, info_system, {\n      uploadScheme: uploadScheme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table__system\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      className: \"title__head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"table__tetx\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 33\n      }\n    }, \" \\u041D\\u0430\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0444\\u0430\\u0439\\u043B\\u0430 \")), /*#__PURE__*/React.createElement(\"th\", {\n      className: \"title__head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"table__tetx\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 33\n      }\n    }, \"\\u0420\\u0430\\u0437\\u043C\\u0435\\u0440\")), /*#__PURE__*/React.createElement(\"th\", {\n      className: \"title__head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"table__tetx\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 33\n      }\n    }, \"\\u0410\\u0432\\u0442\\u043E\\u0440\")), /*#__PURE__*/React.createElement(\"th\", {\n      className: \"title__head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"table__tetx\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 33\n      }\n    }, \"\\u0414\\u0430\\u0442\\u0430 \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F\")), /*#__PURE__*/React.createElement(\"th\", {\n      className: \"title__head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"table__tetx\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 33\n      }\n    }, \"\\u0412\\u0438\\u0434\\u0436\\u0435\\u0442\\u044B\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, items.map(obj => {\n      return /*#__PURE__*/React.createElement(TableSheme, Object.assign({\n        key: obj._id\n      }, obj, {\n        dowlandScheme: dowlandScheme,\n        removeScheme: removeScheme,\n        editScheme: editScheme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 37\n        }\n      }));\n    }))));\n  }\n}\n\nexport default SystemInfo;","map":{"version":3,"sources":["D:/Libr/front/src/Page/SystemInfo.jsx"],"names":["React","useState","useEffect","axios","TableSheme","Navbar","useParams","useHttp","useMessage","SystemInfo","props","items","setItems","info_system","setInfo_system","isLoaded","setIsLoaded","message","request","error","clearError","id","url","url_id","system_data","console","log","data","uploadScheme","selectedFile","FormData","append","name","response","toast","dowlandScheme","_id","method","responseType","then","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","removeScheme","fileSrc","delete","editScheme","put","map","obj"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport TableSheme from '../Components/Table/TableSheme'\r\nimport Navbar from '../Components/Navbar/Navbar'\r\nimport '../Components/Table/Table.css'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useHttp } from '../hooks/http.hook'\r\nimport { useMessage } from '../hooks/message.hook'\r\n\r\n\r\n\r\nfunction SystemInfo(props) {\r\n\r\n    const [items, setItems] = useState([]);\r\n    const [info_system, setInfo_system] = useState([]);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n\r\n    const message = useMessage()\r\n    const { request, error, clearError } = useHttp()\r\n\r\n    const { id } = useParams()\r\n    const url = `http://localhost:5000/api/uploads/${id}`\r\n    const url_id = `http://localhost:5000/api/systems/${id}`\r\n    /*\r\n        useEffect(() => {\r\n            message(error)\r\n            clearError()\r\n        }, [error, message, clearError])\r\n    */\r\n\r\n    //Получение информации по системе\r\n    useEffect(async () => {\r\n        try {\r\n            const system_data = await request(url_id, 'GET')\r\n            setInfo_system(system_data)\r\n        } catch (error) {\r\n        }\r\n    }, [isLoaded])\r\n\r\n    console.log(info_system)\r\n\r\n    //Получение списка всех файлов для конрктной системы\r\n    useEffect(async () => {\r\n        try {\r\n            const data = await request(url, 'GET')\r\n            setIsLoaded(true);\r\n            setItems(data);\r\n        } catch (error) {\r\n            setIsLoaded(true);\r\n        }\r\n    }, [isLoaded])\r\n\r\n\r\n    // Загрузка файла\r\n    const uploadScheme = async (selectedFile) => {\r\n        try {\r\n            const data = new FormData()\r\n            data.append('file', selectedFile, selectedFile.name)\r\n            const response = await request(url, data)\r\n            console.log(\"ошибкknbuubuа\")\r\n            setIsLoaded(false)\r\n        }\r\n        catch (error) {\r\n            toast(error)\r\n        }\r\n        \r\n    }\r\n\r\n    const dowlandScheme = (_id, name) => {\r\n        axios({\r\n            url: `http://127.0.0.1:5000/api/uploads/schema/${_id}`,\r\n            method: 'GET',\r\n            responseType: 'blob', // important\r\n        }).then((response) => {\r\n            const url = window.URL.createObjectURL(new Blob([response.data]));\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.setAttribute('download', name);\r\n            document.body.appendChild(link);\r\n            link.click();\r\n        });\r\n        setIsLoaded(false)\r\n    }\r\n\r\n    const removeScheme = (_id, fileSrc) => {\r\n        axios.delete(`http://127.0.0.1:5000/api/uploads/schema/${_id}`, {\r\n            data: {\r\n                fileSrc\r\n            }\r\n        });\r\n        setIsLoaded(false)\r\n    }\r\n\r\n    const editScheme = async (_id, name) => {\r\n        await axios.put(`http://127.0.0.1:5000/api/uploads/schema/${_id}`, { name })\r\n        setIsLoaded(false)\r\n    }\r\n\r\n\r\n    if (error) {\r\n        return <div>Ошибка: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Загрузка...</div>;\r\n    } else {\r\n        return (\r\n            <div>\r\n\r\n                <Navbar {...info_system}\r\n                    uploadScheme={uploadScheme}\r\n                />\r\n\r\n                < table className=\"table__system\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"title__head\">\r\n                                <span className=\"table__tetx\"> Наименование файла </span>\r\n                            </th>\r\n                            <th className=\"title__head\">\r\n                                <span className=\"table__tetx\">Размер</span>\r\n                            </th>\r\n                            <th className=\"title__head\">\r\n                                <span className=\"table__tetx\">Автор</span>\r\n                            </th>\r\n                            <th className=\"title__head\">\r\n                                <span className=\"table__tetx\">Дата изменения</span>\r\n                            </th>\r\n                            <th className=\"title__head\">\r\n                                <span className=\"table__tetx\">Виджеты</span>\r\n                            </th>\r\n                        </ tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            items.map((obj) => {\r\n                                return (\r\n                                    <TableSheme key={obj._id} {...obj}\r\n                                        dowlandScheme={dowlandScheme}\r\n                                        removeScheme={removeScheme}\r\n                                        editScheme={editScheme}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </ tbody>\r\n                </ table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SystemInfo\r\n"]},"metadata":{},"sourceType":"module"}