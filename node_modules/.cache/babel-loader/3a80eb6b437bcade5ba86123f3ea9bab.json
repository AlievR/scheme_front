{"ast":null,"code":"var _jsxFileName = \"D:\\\\Libr\\\\front\\\\src\\\\Components\\\\Navbar.jsx\";\nimport React, { useState } from 'react';\nimport '../css/Navbar.css';\n\nfunction Navbar({\n  name,\n  gateway,\n  createdAt,\n  uploadScheme\n}) {\n  const [selectedFile, setselectedFile] = useState([]);\n  const [countFile, setcountFile] = useState(0);\n\n  const onChangeHandler = event => {\n    setselectedFile(event.target.files[0]);\n  };\n\n  const onClickHandler = () => {\n    for (let file of selectedFile) {\n      uploadScheme(file);\n    }\n  };\n\n  const dragOver = e => {\n    e.preventDefault();\n  };\n\n  const dragEnter = e => {\n    e.preventDefault();\n  };\n\n  const dragLeave = e => {\n    e.preventDefault();\n  };\n\n  const fileDrop = e => {\n    e.preventDefault();\n    setselectedFile(Array.from(e.dataTransfer.files)); //тут лучше указать lenght\n\n    setcountFile(1);\n  };\n\n  const onClickHandlerRemoveFile = id => {\n    let arr = selectedFile;\n    setselectedFile([]);\n    arr.splice(id, 1); //console.log(arr)\n\n    setselectedFile(arr); //console.log(selectedFile)\n    //selectedFile.splice(id,1)\n    // setselectedFile(selectedFile)\n  };\n\n  const fileSize = size => {\n    console.log(\"Размер пошел\");\n\n    if (size === 0) {\n      return '0 Bytes';\n    }\n\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    const i = Math.floor(Math.log(size) / Math.log(k));\n    return parseFloat((size / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  /*\r\n      <button type=\"button\" onClick={onClickHandler}>Загрузить</button>\r\n      <label for=\"file\" className=\"label__file\">Выберите файлы</label>\r\n                          <input type=\"file\" name=\"file\" className=\"file\" onChange={onChangeHandler} />\r\n  */\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar__conatiner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar__info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"menu_back\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, \"\\u0412\\u0435\\u0440\\u043D\\u0443\\u0442\\u044C\\u0441\\u044F \\u043D\\u0430\\u0437\\u0430\\u0434\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar__upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar__subtile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"subtile__text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 65\n    }\n  }, \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u043E\\u043D\\u043D\\u0430\\u044F \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0430:\"), \" \", name), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"subtile__text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 65\n    }\n  }, \"IP-\\u0430\\u0434\\u0440\\u0435\\u0441 \\u0441\\u0435\\u0442\\u0438:\"), \" \", gateway), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"subtile__text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 65\n    }\n  }, \"\\u0414\\u0430\\u0442\\u0430 \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u044F \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u044B: \"), \" \", createdAt)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"menu__btn\",\n    onDragOver: dragOver,\n    onDragEnter: dragEnter,\n    onDragLeave: dragLeave,\n    onDrop: fileDrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, countFile == 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"drop-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 37\n    }\n  }), \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u0435 \\u0444\\u0430\\u0439\\u043B\\u044B \\u0432 \\u044D\\u0442\\u043E \\u043E\\u043A\\u043D\\u043E\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: onClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 37\n    }\n  }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C\"), (console.log(selectedFile), selectedFile.map((obj, id) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file-status-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file__atribut\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file-type-logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"file-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 57\n      }\n    }, obj.name), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"file-size\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 57\n      }\n    }, \"(\", fileSize(obj.size), \")\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"file-remove\",\n      onClick: () => onClickHandlerRemoveFile(id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"file__krest\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 61\n      }\n    }, \"X\"))));\n  })))))));\n}\n\nexport default Navbar;","map":{"version":3,"sources":["D:/Libr/front/src/Components/Navbar.jsx"],"names":["React","useState","Navbar","name","gateway","createdAt","uploadScheme","selectedFile","setselectedFile","countFile","setcountFile","onChangeHandler","event","target","files","onClickHandler","file","dragOver","e","preventDefault","dragEnter","dragLeave","fileDrop","Array","from","dataTransfer","onClickHandlerRemoveFile","id","arr","splice","fileSize","size","console","log","k","sizes","i","Math","floor","parseFloat","pow","toFixed","map","obj"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,mBAAP;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA,SAAjB;AAA4BC,EAAAA;AAA5B,CAAhB,EAA4D;AAExD,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,CAAD,CAA1C;;AAGA,QAAMU,eAAe,GAAGC,KAAK,IAAI;AAC7BJ,IAAAA,eAAe,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAf;AACH,GAFD;;AAKA,QAAMC,cAAc,GAAG,MAAM;AACzB,SAAK,IAAIC,IAAT,IAAiBT,YAAjB,EAA+B;AAC3BD,MAAAA,YAAY,CAACU,IAAD,CAAZ;AACH;AACJ,GAJD;;AAOA,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACH,GAFD;;AAIA,QAAMC,SAAS,GAAIF,CAAD,IAAO;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACH,GAFD;;AAIA,QAAME,SAAS,GAAIH,CAAD,IAAO;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACH,GAFD;;AAIA,QAAMG,QAAQ,GAAIJ,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACAX,IAAAA,eAAe,CAACe,KAAK,CAACC,IAAN,CAAWN,CAAC,CAACO,YAAF,CAAeX,KAA1B,CAAD,CAAf,CAFoB,CAGpB;;AACAJ,IAAAA,YAAY,CAAC,CAAD,CAAZ;AACH,GALD;;AAOA,QAAMgB,wBAAwB,GAAIC,EAAD,IAAQ;AACrC,QAAIC,GAAG,GAAGrB,YAAV;AACAC,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAoB,IAAAA,GAAG,CAACC,MAAJ,CAAWF,EAAX,EAAc,CAAd,EAHqC,CAIrC;;AACAnB,IAAAA,eAAe,CAACoB,GAAD,CAAf,CALqC,CAMrC;AAEA;AACD;AAEF,GAXD;;AAeA,QAAME,QAAQ,GAAIC,IAAD,IAAU;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AACA,QAAIF,IAAI,KAAK,CAAb,EAAgB;AACZ,aAAO,SAAP;AACH;;AACD,UAAMG,CAAC,GAAG,IAAV;AACA,UAAMC,KAAK,GAAG,CAAC,OAAD,EAAU,IAAV,EAAgB,IAAhB,EAAsB,IAAtB,EAA4B,IAA5B,CAAd;AACA,UAAMC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACJ,GAAL,CAASF,IAAT,IAAiBM,IAAI,CAACJ,GAAL,CAASC,CAAT,CAA5B,CAAV;AACA,WAAOK,UAAU,CAAC,CAACR,IAAI,GAAGM,IAAI,CAACG,GAAL,CAASN,CAAT,EAAYE,CAAZ,CAAR,EAAwBK,OAAxB,CAAgC,CAAhC,CAAD,CAAV,GAAiD,GAAjD,GAAuDN,KAAK,CAACC,CAAD,CAAnE;AACH,GATD;AAWA;AACJ;AACA;AACA;AACA;;;AAKI,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6FADJ,eAEI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wIAAhC,OAAgEjC,IAAhE,CADJ,eAEI;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEAAhC,OAAuDC,OAAvD,CAFJ,eAGI;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8HAAhC,OAAgEC,SAAhE,CAHJ,CADJ,CAFJ,CAFJ,eAYI;AACI,IAAA,SAAS,EAAC,WADd;AAEI,IAAA,UAAU,EAAEY,QAFhB;AAGI,IAAA,WAAW,EAAEG,SAHjB;AAII,IAAA,WAAW,EAAEC,SAJjB;AAKI,IAAA,MAAM,EAAEC,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQQb,SAAS,IAAI,CAAb,gBAEI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,6IAFJ,gBAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEM,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAFJ,GAIQiB,OAAO,CAACC,GAAR,CAAY1B,YAAZ,GACAA,YAAY,CAACmC,GAAb,CAAiB,CAACC,GAAD,EAAMhB,EAAN,KAAa;AAC1B,wBACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BgB,GAAG,CAACxC,IAAjC,CAFJ,eAGI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA8B2B,QAAQ,CAACa,GAAG,CAACZ,IAAL,CAAtC,MAHJ,eAII;AACI,MAAA,SAAS,EAAC,aADd;AAEI,MAAA,OAAO,EAAE,MAAML,wBAAwB,CAACC,EAAD,CAF3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHJ,CAJJ,CADJ,CADJ;AAcH,GAfD,CALR,EAfZ,CAZJ,CAFJ,CADJ,CADJ;AAiFH;;AAED,eAAezB,MAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport '../css/Navbar.css'\r\n\r\nfunction Navbar({ name, gateway, createdAt, uploadScheme }) {\r\n\r\n    const [selectedFile, setselectedFile] = useState([])\r\n    const [countFile, setcountFile] = useState(0)\r\n\r\n\r\n    const onChangeHandler = event => {\r\n        setselectedFile(event.target.files[0])\r\n    }\r\n\r\n\r\n    const onClickHandler = () => {\r\n        for (let file of selectedFile) {\r\n            uploadScheme(file)\r\n        }\r\n    }\r\n\r\n\r\n    const dragOver = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const dragEnter = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const dragLeave = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const fileDrop = (e) => {\r\n        e.preventDefault();\r\n        setselectedFile(Array.from(e.dataTransfer.files));\r\n        //тут лучше указать lenght\r\n        setcountFile(1)\r\n    }\r\n\r\n    const onClickHandlerRemoveFile = (id) => {\r\n        let arr = selectedFile\r\n        setselectedFile([])\r\n        arr.splice(id,1)\r\n        //console.log(arr)\r\n        setselectedFile(arr)\r\n        //console.log(selectedFile)\r\n    \r\n        //selectedFile.splice(id,1)\r\n       // setselectedFile(selectedFile)\r\n        \r\n    }\r\n\r\n\r\n\r\n    const fileSize = (size) => {\r\n        console.log(\"Размер пошел\")\r\n        if (size === 0) {\r\n            return '0 Bytes';\r\n        }\r\n        const k = 1024;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n        const i = Math.floor(Math.log(size) / Math.log(k));\r\n        return parseFloat((size / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n    }\r\n\r\n    /*\r\n        <button type=\"button\" onClick={onClickHandler}>Загрузить</button>\r\n        <label for=\"file\" className=\"label__file\">Выберите файлы</label>\r\n                            <input type=\"file\" name=\"file\" className=\"file\" onChange={onChangeHandler} />\r\n    */\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"navbar__header\">\r\n            <div className=\"navbar__conatiner\">\r\n\r\n                <div className=\"navbar__content\">\r\n\r\n                    <div className=\"navbar__info\">\r\n                        <button className=\"menu_back\">Вернуться назад</button>\r\n                        <div className=\"navbar__upload\">\r\n                            <div className=\"navbar__subtile\" >\r\n                                <span className=\"subtile__text\"><b>Информационная система:</b> {name}</span>\r\n                                <span className=\"subtile__text\"><b>IP-адрес сети:</b> {gateway}</span>\r\n                                <span className=\"subtile__text\"><b>Дата создания системы: </b> {createdAt}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        className=\"menu__btn\"\r\n                        onDragOver={dragOver}\r\n                        onDragEnter={dragEnter}\r\n                        onDragLeave={dragLeave}\r\n                        onDrop={fileDrop}\r\n                    >\r\n                        {\r\n                            countFile == 0\r\n                                ?\r\n                                <div className=\"drop-message\">\r\n                                    <div className=\"upload-icon\" />\r\n                                Загрузите файлы в это окно\r\n                                </div>\r\n                                :\r\n                                <div>\r\n                                    \r\n                                    <button type=\"button\" onClick={onClickHandler}>Загрузить</button>\r\n                                    {\r\n                                        console.log(selectedFile),\r\n                                        selectedFile.map((obj, id) => {\r\n                                            return (\r\n                                                <div className=\"file-status-bar\">\r\n                                                    <div className=\"file__atribut\">\r\n                                                        <div className=\"file-type-logo\" />\r\n                                                        <span className=\"file-name\">{obj.name}</span>\r\n                                                        <span className=\"file-size\">({fileSize(obj.size)})</span>\r\n                                                        <button\r\n                                                            className=\"file-remove\"\r\n                                                            onClick={() => onClickHandlerRemoveFile(id)}>\r\n                                                            <span className=\"file__krest\">X</span>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n\r\n                        }\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                    {/*\r\n                        <div {...getRootProps({ className: 'dropzone' })}>\r\n                            <input {...getInputProps()} />\r\n                            <p>Drag 'n' drop some files here</p>\r\n                            <button type=\"button\" onClick={open}>\r\n                                Open File Dialog\r\n                        </button>\r\n                            <aside>\r\n                                <h4>Files</h4>\r\n                                <ul>{files}</ul>\r\n                            </aside>\r\n                        </div>\r\n                    */}\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n"]},"metadata":{},"sourceType":"module"}