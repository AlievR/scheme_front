{"ast":null,"code":"var _jsxFileName = \"D:\\\\Libr\\\\front\\\\src\\\\Page\\\\SystemList.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BlockLoading, WindMillLoading } from 'react-loadingg';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useHttp } from '../hooks/http.hook';\nimport { useMessage } from '../hooks/message.hook';\nimport ReactDOM from 'react-dom';\nimport TableSystem from '../Components/Table/TableSystem';\nimport Header_Table from '../Components/Table/Header_TableSystems';\nimport Menu from '../Components/Menu/Menu';\nimport Table_Pagination from '../Components/Table/Table_Pagination';\n\nfunction SystemList() {\n  const [items, setItems] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [sort, setSort] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(5);\n  const url = \"http://localhost:5000/api/systems\";\n  const {\n    request,\n    error,\n    clearError\n  } = useHttp();\n  useEffect(() => {\n    toast.error(error);\n    clearError();\n  }, [error, clearError]);\n  useEffect(async () => {\n    try {\n      const data = await request(url, 'GET');\n      setIsLoaded(true);\n      setItems(data);\n    } catch (error) {\n      setIsLoaded(true);\n    }\n  }, [isLoaded]);\n\n  const addSystem = async (request_type, formInfo) => {\n    try {\n      const data = await request(url, String(request_type), formInfo);\n      toast.success(data.message);\n      setIsLoaded(false);\n    } catch (error) {\n      toast.error(error);\n    }\n  };\n\n  const removeScheme = async (_id, request_type) => {\n    try {\n      const data = await request(url, String(request_type), {\n        _id\n      });\n      toast.success(data.message);\n      setIsLoaded(false);\n    } catch (error) {\n      toast.error(error);\n    }\n  };\n\n  const editScheme = async (_id, name) => {\n    try {\n      const data = await axios.put(`http://localhost:5000/api/systems/${_id}`, {\n        name\n      });\n      toast.success(`Система ${name} переименована!`);\n      setIsLoaded(false);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const SortByUp = async param => {\n    if (param == \"name\") {\n      setItems(await items.sort((a, b) => a.name < b.name ? 1 : -1));\n    }\n\n    if (param == \"createdAt\") {\n      setItems(await items.sort((a, b) => a.createdAt < b.createdAt ? 1 : -1));\n    }\n\n    setSort(false);\n    setSort(true);\n  };\n\n  const SortByDown = async param => {\n    console.log(param);\n\n    if (param == \"name\") {\n      setItems(await items.sort((a, b) => a.name > b.name ? 1 : -1));\n    }\n\n    if (param == \"createdAt\") {\n      setItems(await items.sort((a, b) => a.createdAt > b.createdAt ? 1 : -1));\n    }\n\n    setSort(false);\n    setSort(true);\n  }; // Get current posts\n\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = items.slice(indexOfFirstPost, indexOfLastPost);\n  console.log(currentPosts);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 16\n      }\n    }, \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error.message);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/React.createElement(BlockLoading, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 16\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"system_list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      PostInfoSystem: addSystem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table__system\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header_Table, {\n      SortByUp: SortByUp,\n      SortByDown: SortByDown,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, currentPosts.map(obj => {\n      return /*#__PURE__*/React.createElement(TableSystem, Object.assign({\n        key: obj._id\n      }, obj, {\n        removeScheme: removeScheme,\n        editScheme: editScheme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 37\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(Table_Pagination, {\n      postsPerPage: postsPerPage,\n      totalPosts: items.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }))));\n  }\n}\n\nexport default SystemList;","map":{"version":3,"sources":["D:/Libr/front/src/Page/SystemList.jsx"],"names":["React","useState","useEffect","axios","BlockLoading","WindMillLoading","toast","useHttp","useMessage","ReactDOM","TableSystem","Header_Table","Menu","Table_Pagination","SystemList","items","setItems","isLoaded","setIsLoaded","sort","setSort","currentPage","setCurrentPage","postsPerPage","setPostsPerPage","url","request","error","clearError","data","addSystem","request_type","formInfo","String","success","message","removeScheme","_id","editScheme","name","put","e","console","SortByUp","param","a","b","createdAt","SortByDown","log","indexOfLastPost","indexOfFirstPost","currentPosts","slice","map","obj","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport { BlockLoading, WindMillLoading } from 'react-loadingg';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useHttp } from '../hooks/http.hook'\r\nimport { useMessage } from '../hooks/message.hook'\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport TableSystem from '../Components/Table/TableSystem'\r\nimport Header_Table from '../Components/Table/Header_TableSystems'\r\nimport Menu from '../Components/Menu/Menu'\r\nimport Table_Pagination from '../Components/Table/Table_Pagination';\r\n\r\n\r\nfunction SystemList() {\r\n\r\n    const [items, setItems] = useState([]);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [sort, setSort] = useState(false)\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [postsPerPage, setPostsPerPage] = useState(5)\r\n    const url = \"http://localhost:5000/api/systems\"\r\n\r\n    const { request, error, clearError } = useHttp()\r\n\r\n\r\n    useEffect(() => {\r\n        toast.error(error)\r\n\r\n        clearError()\r\n    }, [error, clearError])\r\n\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            const data = await request(url, 'GET')\r\n            setIsLoaded(true);\r\n            setItems(data);\r\n        } catch (error) {\r\n            setIsLoaded(true);\r\n        }\r\n    }, [isLoaded])\r\n\r\n\r\n    const addSystem = async (request_type, formInfo) => {\r\n        try {\r\n            const data = await request(url, String(request_type), formInfo)\r\n            toast.success(data.message)\r\n            setIsLoaded(false)\r\n        } catch (error) {\r\n            toast.error(error)\r\n        }\r\n    }\r\n\r\n\r\n    const removeScheme = async (_id, request_type) => {\r\n        try {\r\n            const data = await request(url, String(request_type), { _id })\r\n            toast.success(data.message)\r\n            setIsLoaded(false)\r\n        } catch (error) {\r\n            toast.error(error)\r\n        }\r\n    }\r\n\r\n    const editScheme = async (_id, name) => {\r\n        try {\r\n            const data = await axios.put(`http://localhost:5000/api/systems/${_id}`, { name })\r\n            toast.success(`Система ${name} переименована!`)\r\n            setIsLoaded(false)\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n\r\n    }\r\n\r\n    const SortByUp = async (param) => {\r\n        if (param == \"name\") {\r\n            setItems(await items.sort((a, b) => a.name < b.name ? 1 : -1))\r\n        }\r\n        if (param == \"createdAt\") {\r\n            setItems(await items.sort((a, b) => a.createdAt < b.createdAt ? 1 : -1))\r\n        }\r\n        setSort(false)\r\n        setSort(true)\r\n    }\r\n\r\n    const SortByDown = async (param) => {\r\n        console.log(param)\r\n        if (param == \"name\") {\r\n            setItems(await items.sort((a, b) => a.name > b.name ? 1 : -1))\r\n        }\r\n        if (param == \"createdAt\") {\r\n            setItems(await items.sort((a, b) => a.createdAt > b.createdAt ? 1 : -1))\r\n        }\r\n        setSort(false)\r\n        setSort(true)\r\n    }\r\n\r\n    // Get current posts\r\n\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = items.slice(indexOfFirstPost, indexOfLastPost)\r\n    console.log(currentPosts)\r\n\r\n    if (error) {\r\n        return <div>Ошибка: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <BlockLoading\r\n            size='large' />\r\n    } else {\r\n        return (\r\n            <div className=\"system_list\">\r\n                <Menu PostInfoSystem={addSystem} />\r\n                < table className=\"table__system\">\r\n                    <Header_Table\r\n                        SortByUp={SortByUp}\r\n                        SortByDown={SortByDown}\r\n                    />\r\n                    <tbody>\r\n                        {\r\n                            currentPosts.map((obj) => {\r\n                                return (\r\n                                    <TableSystem key={obj._id} {...obj}\r\n                                        removeScheme={removeScheme}\r\n                                        editScheme={editScheme} />\r\n                                )\r\n                            })\r\n                        }\r\n                        <Table_Pagination postsPerPage={postsPerPage} totalPosts={items.length}/>\r\n                    </ tbody>\r\n                </ table>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default SystemList\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}