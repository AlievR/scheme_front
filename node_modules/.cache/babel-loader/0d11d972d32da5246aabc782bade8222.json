{"ast":null,"code":"var _jsxFileName = \"D:\\\\Libr\\\\front\\\\src\\\\Components\\\\Navbar.jsx\";\nimport React, { useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport '../css/Navbar.css';\n\nfunction Navbar({\n  name,\n  gateway,\n  createdAt,\n  uploadScheme\n}) {\n  const [selectedFile, setselectedFile] = useState([]);\n  const [countFile, setcountFile] = useState(0);\n  const [errorMessage, setErrorMessage] = useState('');\n  /*\r\n      const { getRootProps, getInputProps, open, acceptedFiles } = useDropzone({\r\n          // Disable click and keydown behavior\r\n          noClick: true,\r\n          noKeyboard: true,\r\n          onDrop: useCallback((acceptedFiles) => {\r\n              setselectedFile(\r\n                  acceptedFiles.map(File)\r\n              )\r\n          }\r\n      });\r\n  */\n\n  const onChangeHandler = event => {\n    setselectedFile(event.target.files[0]);\n  };\n\n  const onClickHandler = () => {\n    for (let file of selectedFile) {\n      uploadScheme(file);\n    }\n  };\n\n  const dragOver = e => {\n    e.preventDefault();\n  };\n\n  const dragEnter = e => {\n    e.preventDefault();\n  };\n\n  const dragLeave = e => {\n    e.preventDefault();\n  };\n\n  const fileDrop = async e => {\n    e.preventDefault();\n    setselectedFile(e.dataTransfer.files);\n    setcountFile(1);\n  };\n\n  const fileType = fileName => {\n    return fileName.substring(fileName.lastIndexOf('.') + 1, fileName.length) || fileName;\n  };\n  /*\r\n      <button type=\"button\" onClick={onClickHandler}>Загрузить</button>\r\n      <label for=\"file\" className=\"label__file\">Выберите файлы</label>\r\n                          <input type=\"file\" name=\"file\" className=\"file\" onChange={onChangeHandler} />\r\n  */\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar__conatiner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar__info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"menu_back\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, \"\\u0412\\u0435\\u0440\\u043D\\u0443\\u0442\\u044C\\u0441\\u044F \\u043D\\u0430\\u0437\\u0430\\u0434\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar__upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar__subtile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"subtile__text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 65\n    }\n  }, \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u043E\\u043D\\u043D\\u0430\\u044F \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0430:\"), \" \", name), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"subtile__text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 65\n    }\n  }, \"IP-\\u0430\\u0434\\u0440\\u0435\\u0441 \\u0441\\u0435\\u0442\\u0438:\"), \" \", gateway), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"subtile__text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 65\n    }\n  }, \"\\u0414\\u0430\\u0442\\u0430 \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u044F \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u044B: \"), \" \", createdAt)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"menu__btn\",\n    onDragOver: dragOver,\n    onDragEnter: dragEnter,\n    onDragLeave: dragLeave,\n    onDrop: fileDrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, countFile == 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"drop-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 37\n    }\n  }), \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u0435 \\u0444\\u0430\\u0439\\u043B\\u044B \\u0432 \\u044D\\u0442\\u043E \\u043E\\u043A\\u043D\\u043E\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: onClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 37\n    }\n  }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C\"), console.log(selectedFile))))));\n}\n\nexport default Navbar;","map":{"version":3,"sources":["D:/Libr/front/src/Components/Navbar.jsx"],"names":["React","useState","useDropzone","Navbar","name","gateway","createdAt","uploadScheme","selectedFile","setselectedFile","countFile","setcountFile","errorMessage","setErrorMessage","onChangeHandler","event","target","files","onClickHandler","file","dragOver","e","preventDefault","dragEnter","dragLeave","fileDrop","dataTransfer","fileType","fileName","substring","lastIndexOf","length","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { useDropzone } from 'react-dropzone';\r\nimport '../css/Navbar.css'\r\n\r\nfunction Navbar({ name, gateway, createdAt, uploadScheme }) {\r\n\r\n    const [selectedFile, setselectedFile] = useState([])\r\n    const [countFile, setcountFile] = useState(0)\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    /*\r\n        const { getRootProps, getInputProps, open, acceptedFiles } = useDropzone({\r\n            // Disable click and keydown behavior\r\n            noClick: true,\r\n            noKeyboard: true,\r\n            onDrop: useCallback((acceptedFiles) => {\r\n                setselectedFile(\r\n                    acceptedFiles.map(File)\r\n                )\r\n            }\r\n        });\r\n    */\r\n\r\n    const onChangeHandler = event => {\r\n        setselectedFile(event.target.files[0])\r\n    }\r\n\r\n\r\n    const onClickHandler = () => {\r\n        for (let file of selectedFile) {\r\n            uploadScheme(file)\r\n        }\r\n    }\r\n\r\n\r\n    const dragOver = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const dragEnter = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const dragLeave = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const fileDrop = async (e) => {\r\n        e.preventDefault();\r\n        setselectedFile(e.dataTransfer.files);\r\n        setcountFile(1)\r\n\r\n    }\r\n\r\n\r\n    const fileType = (fileName) => {\r\n        return fileName.substring(fileName.lastIndexOf('.') + 1, fileName.length) || fileName;\r\n    }\r\n\r\n\r\n    /*\r\n        <button type=\"button\" onClick={onClickHandler}>Загрузить</button>\r\n        <label for=\"file\" className=\"label__file\">Выберите файлы</label>\r\n                            <input type=\"file\" name=\"file\" className=\"file\" onChange={onChangeHandler} />\r\n    */\r\n    return (\r\n        <div className=\"navbar__header\">\r\n            <div className=\"navbar__conatiner\">\r\n\r\n                <div className=\"navbar__content\">\r\n\r\n                    <div className=\"navbar__info\">\r\n                        <button className=\"menu_back\">Вернуться назад</button>\r\n                        <div className=\"navbar__upload\">\r\n                            <div className=\"navbar__subtile\" >\r\n                                <span className=\"subtile__text\"><b>Информационная система:</b> {name}</span>\r\n                                <span className=\"subtile__text\"><b>IP-адрес сети:</b> {gateway}</span>\r\n                                <span className=\"subtile__text\"><b>Дата создания системы: </b> {createdAt}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        className=\"menu__btn\"\r\n                        onDragOver={dragOver}\r\n                        onDragEnter={dragEnter}\r\n                        onDragLeave={dragLeave}\r\n                        onDrop={fileDrop}\r\n                    >\r\n                        {\r\n                            countFile == 0\r\n                                ?\r\n                                <div className=\"drop-message\">\r\n                                    <div className=\"upload-icon\" />\r\n                                Загрузите файлы в это окно\r\n                                </div>\r\n                                :\r\n                                <div>\r\n                                    <button type=\"button\" onClick={onClickHandler}>Загрузить</button>\r\n                                    {\r\n                                        console.log(selectedFile)\r\n                                    }\r\n                                </div>\r\n\r\n                        }\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                    {/*\r\n                        <div {...getRootProps({ className: 'dropzone' })}>\r\n                            <input {...getInputProps()} />\r\n                            <p>Drag 'n' drop some files here</p>\r\n                            <button type=\"button\" onClick={open}>\r\n                                Open File Dialog\r\n                        </button>\r\n                            <aside>\r\n                                <h4>Files</h4>\r\n                                <ul>{files}</ul>\r\n                            </aside>\r\n                        </div>\r\n                    */}\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n"]},"metadata":{},"sourceType":"module"}