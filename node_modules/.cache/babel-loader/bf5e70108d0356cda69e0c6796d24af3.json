{"ast":null,"code":"var _jsxFileName = \"D:\\\\Libr\\\\front\\\\src\\\\Page\\\\SystemList.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { BlockLoading, WindMillLoading } from 'react-loadingg';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useHttp } from '../hooks/http.hook';\nimport { useMessage } from '../hooks/message.hook';\nimport TableSystem from '../Components/Table/TableSystem';\nimport Header_Table from '../Components/Table/Header_TableSystems';\nimport Menu from '../Components/Menu/Menu';\n\nfunction SystemList() {\n  const [items, setItems] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const url = \"http://localhost:5000/api/systems\";\n  const {\n    request,\n    error,\n    clearError\n  } = useHttp();\n  useEffect(() => {\n    toast.error(error);\n    clearError();\n  }, [error, clearError]);\n  useEffect(async () => {\n    try {\n      const data = await request(url, 'GET');\n      setIsLoaded(true);\n      setItems(data);\n    } catch (error) {\n      setIsLoaded(true);\n    }\n  }, [isLoaded]);\n\n  const addSystem = async (request_type, formInfo) => {\n    try {\n      const data = await request(url, String(request_type), formInfo);\n      toast.error(data.message);\n      setIsLoaded(false);\n    } catch (error) {\n      toast.error(error);\n    }\n  };\n\n  const changeVidjetStatus = async (_id, request_type) => {\n    try {\n      const data = await request(url, String(request_type), {\n        _id\n      });\n      toast.error(data.message);\n      setIsLoaded(false);\n    } catch (error) {\n      toast.error(error);\n    }\n  };\n\n  const SortByUp = () => {};\n\n  const SortByDown = () => {};\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 16\n      }\n    }, \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error.message);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/React.createElement(BlockLoading, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 16\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"system_list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      PostInfoSystem: addSystem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table__system\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header_Table, {\n      SortByUp: SortByUp,\n      SortByDown: SortByDown,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, items.map(obj => {\n      return /*#__PURE__*/React.createElement(TableSystem, Object.assign({\n        key: obj._id\n      }, obj, {\n        hanldeVidjet: changeVidjetStatus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 37\n        }\n      }));\n    }))));\n  }\n}\n\nexport default SystemList;","map":{"version":3,"sources":["D:/Libr/front/src/Page/SystemList.jsx"],"names":["React","useState","useEffect","BlockLoading","WindMillLoading","toast","useHttp","useMessage","TableSystem","Header_Table","Menu","SystemList","items","setItems","isLoaded","setIsLoaded","url","request","error","clearError","data","addSystem","request_type","formInfo","String","message","changeVidjetStatus","_id","SortByUp","SortByDown","map","obj"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { BlockLoading, WindMillLoading } from 'react-loadingg';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useHttp } from '../hooks/http.hook'\r\nimport { useMessage } from '../hooks/message.hook'\r\n\r\nimport TableSystem from '../Components/Table/TableSystem'\r\nimport Header_Table from '../Components/Table/Header_TableSystems'\r\nimport Menu from '../Components/Menu/Menu'\r\n\r\n\r\nfunction SystemList() {\r\n\r\n    const [items, setItems] = useState([]);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const url = \"http://localhost:5000/api/systems\"\r\n\r\n    const { request, error, clearError } = useHttp()\r\n\r\n\r\n    useEffect(() => {\r\n        toast.error(error)\r\n        clearError()\r\n    }, [error, clearError])\r\n\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            const data = await request(url, 'GET')\r\n            setIsLoaded(true);\r\n            setItems(data);\r\n        } catch (error) {\r\n            setIsLoaded(true);\r\n        }\r\n    }, [isLoaded])\r\n\r\n\r\n    const addSystem = async (request_type, formInfo) => {\r\n        try {\r\n            const data = await request(url, String(request_type), formInfo)\r\n            toast.error(data.message)\r\n            setIsLoaded(false)\r\n        } catch (error) {\r\n            toast.error(error)\r\n        }\r\n    }\r\n\r\n\r\n    const changeVidjetStatus = async (_id, request_type) => {\r\n        try {\r\n            const data = await request(url, String(request_type), { _id })\r\n            toast.error(data.message)\r\n            setIsLoaded(false)\r\n        } catch (error) {\r\n            toast.error(error)\r\n        }\r\n    }\r\n\r\n    const SortByUp = () => {\r\n\r\n    }\r\n\r\n    const SortByDown = () => {\r\n        \r\n    }\r\n\r\n    \r\n\r\n    if (error) {\r\n        return <div>Ошибка: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <BlockLoading\r\n            size='large' />\r\n    } else {\r\n        return (\r\n            <div className=\"system_list\">\r\n                <Menu PostInfoSystem={addSystem} />\r\n                < table className=\"table__system\">\r\n                    <Header_Table\r\n                        SortByUp={SortByUp}\r\n                        SortByDown={SortByDown}\r\n                    />\r\n                    <tbody>\r\n                        {\r\n                            items.map((obj) => {\r\n                                return (\r\n                                    <TableSystem key={obj._id} {...obj} hanldeVidjet={changeVidjetStatus} />\r\n                                )\r\n                            })\r\n                        }\r\n                    </ tbody>\r\n                </ table>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default SystemList\r\n"]},"metadata":{},"sourceType":"module"}