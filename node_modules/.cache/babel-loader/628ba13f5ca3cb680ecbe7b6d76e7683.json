{"ast":null,"code":"var _jsxFileName = \"D:\\\\Libr\\\\front\\\\src\\\\Components\\\\Table\\\\Table_Pagination.jsx\";\nimport React, { useState } from 'react';\n\nfunction Table_Pagination({\n  postsPerPage,\n  totalPosts,\n  paginate\n}) {\n  const [currentPage, setCurrentPage] = useState(1);\n  const pageNumber = [];\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumber.push(i);\n  }\n\n  const checkPaginateNumber = number => {\n    console.log(number);\n    setCurrentPage(number);\n    paginate(number);\n  };\n\n  const nextPaginateNumber = () => {\n    if (currentPage != pageNumber.length) {\n      checkPaginateNumber(currentPage + 1);\n    }\n  };\n\n  const previousPaginateNumber = () => {\n    if (currentPage > 1) {\n      checkPaginateNumber(currentPage - 1);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"nav__pagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text__pagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, `Showing ${postsPerPage + 1} to ${postsPerPage} of ${totalPosts} entries`), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"table__pagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"page__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: previousPaginateNumber,\n    className: \"page__link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"Previous\")), pageNumber.map(number => /*#__PURE__*/React.createElement(\"li\", {\n    key: number,\n    className: \"page__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => checkPaginateNumber(number),\n    className: currentPage === number ? 'page__link active' : 'page__link',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }, number))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"page__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: nextPaginateNumber,\n    className: \"page__link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"Next\"))));\n}\n\nexport default Table_Pagination;","map":{"version":3,"sources":["D:/Libr/front/src/Components/Table/Table_Pagination.jsx"],"names":["React","useState","Table_Pagination","postsPerPage","totalPosts","paginate","currentPage","setCurrentPage","pageNumber","i","Math","ceil","push","checkPaginateNumber","number","console","log","nextPaginateNumber","length","previousPaginateNumber","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,gBAAT,CAA0B;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,UAAhB;AAA4BC,EAAAA;AAA5B,CAA1B,EAAkE;AAC9D,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAMO,UAAU,GAAG,EAAnB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUP,UAAU,GAAGD,YAAvB,CAArB,EAA2DM,CAAC,EAA5D,EAAgE;AAC5DD,IAAAA,UAAU,CAACI,IAAX,CAAgBH,CAAhB;AACH;;AAGD,QAAMI,mBAAmB,GAAIC,MAAD,IAAY;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAP,IAAAA,cAAc,CAACO,MAAD,CAAd;AACAT,IAAAA,QAAQ,CAACS,MAAD,CAAR;AACH,GAJD;;AAMA,QAAMG,kBAAkB,GAAG,MAAM;AAC7B,QAAIX,WAAW,IAAIE,UAAU,CAACU,MAA9B,EAAsC;AAClCL,MAAAA,mBAAmB,CAACP,WAAW,GAAG,CAAf,CAAnB;AACH;AACJ,GAJD;;AAOA,QAAMa,sBAAsB,GAAG,MAAM;AACjC,QAAIb,WAAW,GAAG,CAAlB,EAAqB;AACjBO,MAAAA,mBAAmB,CAACP,WAAW,GAAG,CAAf,CAAnB;AACH;AACJ,GAJD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAES,WAAUH,YAAY,GAAG,CAAE,OAAMA,YAAa,OAAMC,UAAW,UAFxE,CADJ,eAMI;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,OAAO,EAAEe,sBAAjB;AAAyC,IAAA,SAAS,EAAC,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ,EAOQX,UAAU,CAACY,GAAX,CAAeN,MAAM,iBAEjB;AAAI,IAAA,GAAG,EAAEA,MAAT;AAAiB,IAAA,SAAS,EAAC,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,OAAO,EAAE,MAAMD,mBAAmB,CAACC,MAAD,CAA1C;AACI,IAAA,SAAS,EAAGR,WAAW,KAAKQ,MAAjB,GACL,mBADK,GAEL,YAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKA,MALL,CADJ,CAFJ,CAPR,eAoBI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,OAAO,EAAEG,kBAAjB;AACI,IAAA,SAAS,EAAC,YADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CApBJ,CANJ,CADJ;AAoCH;;AAED,eAAef,gBAAf","sourcesContent":["import React, { useState } from 'react'\r\n\r\nfunction Table_Pagination({ postsPerPage, totalPosts, paginate }) {\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const pageNumber = []\r\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n        pageNumber.push(i)\r\n    }\r\n\r\n\r\n    const checkPaginateNumber = (number) => {\r\n        console.log(number)\r\n        setCurrentPage(number)\r\n        paginate(number)\r\n    }\r\n\r\n    const nextPaginateNumber = () => {\r\n        if (currentPage != pageNumber.length) {\r\n            checkPaginateNumber(currentPage + 1)\r\n        }\r\n    }\r\n\r\n\r\n    const previousPaginateNumber = () => {\r\n        if (currentPage > 1) {\r\n            checkPaginateNumber(currentPage - 1)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <nav className=\"nav__pagination\">\r\n            <span className=\"text__pagination\">\r\n                {\r\n                    `Showing ${postsPerPage + 1} to ${postsPerPage} of ${totalPosts} entries`\r\n                }\r\n            </span>\r\n            <ul className=\"table__pagination\">\r\n                <li className=\"page__item\">\r\n                    <button onClick={previousPaginateNumber} className=\"page__link\">\r\n                        Previous\r\n                    </button>\r\n                </li>\r\n                {\r\n                    pageNumber.map(number =>\r\n\r\n                        <li key={number} className=\"page__item\">\r\n                            <button onClick={() => checkPaginateNumber(number)}\r\n                                className={(currentPage === number)\r\n                                    ? 'page__link active'\r\n                                    : 'page__link'}\r\n                            >\r\n                                {number}\r\n                            </button>\r\n                        </li>\r\n                    )\r\n                }\r\n                <li className=\"page__item\">\r\n                    <button onClick={nextPaginateNumber}\r\n                        className=\"page__link\">\r\n                        Next\r\n                    </button>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Table_Pagination\r\n"]},"metadata":{},"sourceType":"module"}